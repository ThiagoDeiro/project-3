{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/context/auth-context.js","profile/header/components/HeaderItem.js","profile/header/components/HeaderList.js","profile/header/pages/HeaderPage.js","profile/experience/components/ExperienceItem.js","profile/experience/components/ExperienceList.js","profile/experience/pages/ExperiencePage.js","profile/pages/ProfilePage.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","profile/header/pages/UpdateHeader.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","profile/header/pages/NewHeader.js","profile/experience/pages/NewExperience.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","UsersList","items","length","map","user","key","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","async","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","AuthContext","createContext","isLoggedIn","userId","token","login","logout","HeaderItem","auth","useContext","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","Authorization","onDelete","title","jobTitle","about","creatorId","HeaderList","_id","adminComments","isOk","creator","onDeleteHeader","HeaderPage","loadedHeader","setLoadedHeader","useParams","fetchHeader","deletedHeaderId","prevHeader","ExperienceItem","experience","company","format","startDate","endDate","ExperienceList","console","log","onDeleteExperience","ExperiencePage","loadedExperience","setLoadedExperience","experiences","fetchExperience","deletedExperienceId","prevExperience","ProfilePage","validate","value","validators","isValid","validator","trim","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdateHeader","headerId","history","useHistory","inputHandler","setFormData","formData","FormData","append","Auth","isLoginMode","setIsLoginMode","email","password","JSON","stringify","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewHeader","NewExperience","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.6a787335.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/profile`}>\n          <div className=\"user-item__image\">\n            <Avatar image={props.image} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              The Dev\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          // image={user.image}\n          name={user.name}\n          // placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          '/api/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport '../../../places/components/PlaceItem.css';\n\nconst HeaderItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/header/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler} type={`header`}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this header? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          {props.image && \n          <div className=\"place-item__image\">\n            <img src={`/${props.image}`} alt={props.title}/>\n          </div>}\n          <div className=\"place-item__info\">\n            <h2>Name: {props.name}</h2>\n            <h3>Job Title: {props.jobTitle}</h3>\n            <p>About: {props.about}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            {auth.userId === props.creatorId && (\n              <Button to={`/header/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n\n  );\n};\n\nexport default HeaderItem;\n","import React from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\n\nimport HeaderItem from './HeaderItem';\n\nconst HeaderList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No header found. Maybe create one?</h2>\n          <Button to=\"/header/new\">Share Header</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(header => (\n        <HeaderItem\n          key={header._id}\n          id={header._id}\n          name={header.name}\n          image={header.image}\n          jobTitle={header.jobTitle}\n          about={header.about}\n          adminComments={header.adminComments}\n          isOk={header.isOk}\n          creatorId={header.creator}\n          onDelete={props.onDeleteHeader}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default HeaderList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport HeaderList from '../components/HeaderList';\n\nconst HeaderPage = () => {\n    const [loadedHeader, setLoadedHeader] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchHeader = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/header/user/${userId}`\n            );\n            setLoadedHeader(responseData.header);\n          } catch (err) {}\n        };\n        fetchHeader();\n      }, [sendRequest, userId]);\n    \n      const headerDeletedHandler = deletedHeaderId => {\n        setLoadedHeader(prevHeader =>\n          prevHeader.filter(header => header.id !== deletedHeaderId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedHeader && (\n            <HeaderList items={loadedHeader} onDeleteHeader={headerDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default HeaderPage;\n","import React, { useState, useContext } from 'react';\nimport Moment from 'react-moment';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport '../../../places/components/PlaceItem.css';\n\nconst ExperienceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/experiences/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  // let endDate = Moment(`${props.endDate}`).format(\"MMMM D, YYYY\");\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        experience=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this experience? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__info\">\n            <h1>Experiences</h1>\n            <h2>Title: {props.title}</h2>\n            <h3>Company: {props.company}</h3>\n            <p>Start Date: &nbsp;\t\n              <Moment format=\"MMMM YYYY\">\n                  {props.startDate}\n              </Moment> |\n            End Date: &nbsp;\t\n              <Moment format=\"MMMM YYYY\">\n                  {props.endDate}\n              </Moment>\n            </p>\n          </div>\n          <div className=\"place-item__actions\">\n            {auth.userId === props.creatorId && (\n              <Button to={`/experience/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n\n  );\n};\n\nexport default ExperienceItem;\n","import React from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\nimport ExperienceItem from './ExperienceItem';\n\nconst ExperienceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No experience found. Maybe create one?</h2>\n          <Button to=\"/experiences/new\">Share Experience</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  console.log(props.items);\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(experience => (\n        <ExperienceItem\n          key={experience._id}\n          id={experience._id}\n          title={experience.title}\n          company={experience.company}\n          startDate={experience.startDate}\n          endDate={experience.endDate}\n          adminComments={experience.adminComments}\n          isOk={experience.isOk}\n          creatorId={experience.creator}\n          onDelete={props.onDeleteExperience}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExperienceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport ExperienceList from '../components/ExperienceList';\n\nconst ExperiencePage = () => {\n    const [loadedExperience, setLoadedExperience] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchExperience = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/experiences/user/${userId}`\n            );\n            setLoadedExperience(responseData.experience.experiences);\n            console.log('response data',responseData.experience.experiences);\n          } catch (err) {}\n        };\n        fetchExperience();\n      }, [sendRequest, userId]);\n    \n      const experienceDeletedHandler = deletedExperienceId => {\n        setLoadedExperience(prevExperience =>\n          prevExperience.filter(experience => experience.id !== deletedExperienceId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedExperience && (\n            <ExperienceList items={loadedExperience} onDeleteExperience={experienceDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default ExperiencePage;\n","import React from 'react';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport HeaderPage from '../header/pages/HeaderPage';\nimport ExperiencePage from '../experience/pages/ExperiencePage';\n\nconst ProfilePage = (props) => {\n\n  const { isLoading, error, clearError } = useHttpClient();\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      {!isLoading && (\n        <HeaderPage />\n      )}\n      {!isLoading && (\n        <ExperiencePage userId={props.id}/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProfilePage;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\n\nimport {\n  VALIDATOR_REQUIRE\n  // ,\n  // VALIDATOR_MINLENGTH\n} from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst UpdateHeader = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedHeader, setLoadedHeader] = useState();\n  const headerId = useParams().headerId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      jobTitle: {\n        value: '',\n        isValid: false\n      },\n      about: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchHeader = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/header/${headerId}`\n        );\n        setLoadedHeader(responseData.header);\n        setFormData(\n          {\n            name: {\n              value: responseData.header.name,\n              isValid: true\n            },\n            jobTitle: {\n              value: responseData.header.jobTitle,\n              isValid: true\n            },\n            about: {\n              value: responseData.header.about,\n              isValid: true\n            },\n            image: {\n              value: responseData.header.image,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchHeader();\n  }, [sendRequest, headerId, setFormData]);\n\n  const headerUpdateSubmitHandler = async event => {\n    event.preventDefault();\n  //   try {\n  //     await sendRequest(\n  //       `/api/header/${headerId}`,\n  //       'PATCH',\n  //       JSON.stringify({\n  //         name: formState.inputs.name.value,\n  //         jobTitle: formState.inputs.jobTitle.value,\n  //         about: formState.inputs.about.value\n  //       }),\n  //       {\n  //         'Content-Type': 'application/json',\n  //         Authorization: 'Bearer ' + auth.token\n  //       }\n  //     );\n  //     history.push('/' + auth.userId + '/header');\n  //   } catch (err) {}\n  // };\n\n  try {\n    const formData = new FormData();\n    formData.append('name', formState.inputs.name.value);\n    formData.append('image', formState.inputs.image.value);\n    formData.append('jobTitle', formState.inputs.jobTitle.value);\n    formData.append('about', formState.inputs.about.value);\n    await sendRequest(\n      `/api/header/${headerId}`,\n      'PATCH', \n      formData, {\n      Authorization: 'Bearer ' + auth.token\n    });\n    history.push('/' + auth.userId + '/header');\n  } catch (err) {}\n};\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedHeader && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find header!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedHeader && (\n        <form className=\"place-form\" onSubmit={headerUpdateSubmitHandler}>\n          <Input\n            id=\"name\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your name.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.name}\n            initialValid={true}\n          />\n          <ImageUpload\n            id=\"image\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.image}\n            errorText=\"Please provide a photo.\"\n          />\n          <Input\n            id=\"jobTitle\"\n            element=\"textarea\"\n            label=\"Job Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your job title.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.jobTitle}\n            initialValid={true}\n          />\n          <Input\n            id=\"about\"\n            element=\"textarea\"\n            label=\"About\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.about}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE HEADER\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateHeader;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          '/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          '/api/users/signup',\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/profile`}>MY PROFILE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/header/new\">ADD HEADER (provisory)</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/experiences/new\">ADD EXPERIENCE (provisory)</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">MockedIn</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE\n  // ,\n  // VALIDATOR_MINLENGTH\n} from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewHeader = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      jobTitle: {\n        value: '',\n        isValid: false\n      },\n      about: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const headerSubmitHandler = async event => {\n    event.preventDefault();\n    //BELOW IS FOR WHEN WE HAVE THE IMAGE UPLOAD FULLY WORKING:\n    try {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('image', formState.inputs.image.value);\n      formData.append('jobTitle', formState.inputs.jobTitle.value);\n      formData.append('about', formState.inputs.about.value);\n      await sendRequest('/api/header', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n//   try {\n//     await sendRequest(\n//       '/api/header',\n//       'POST',\n//       JSON.stringify({\n//         name: formState.inputs.name.value,\n//         jobTitle: formState.inputs.jobTitle.value,\n//         about: formState.inputs.about.value,\n//         adminComments: formState.inputs.adminComments.value,\n//       }),\n//       { \n//       'Content-Type': 'application/json',\n//       Authorization: 'Bearer ' + auth.token\n//      }\n//     );\n//     history.push('/');\n//   } catch (err) {}\n// };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={headerSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"name\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Name\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide a photo.\"\n        />\n        <Input\n          id=\"jobTitle\"\n          element=\"textarea\"\n          label=\"Job Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"about\"\n          element=\"input\"\n          label=\"About\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n        {/* <Input\n          id=\"adminComments\"\n          element=\"input\"\n          label=\"Comment\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        /> */}\n        {/* <Button type=\"submit\" disabled={!formState.isValid}> */}\n        <Button type=\"submit\" >\n          ADD HEADER\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewHeader;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewExperience = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      company: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const experienceSubmitHandler = async event => {\n    event.preventDefault();\n  try {\n    await sendRequest(\n      '/api/experiences',\n      'POST',\n      JSON.stringify({\n        title: formState.inputs.title.value,\n        company: formState.inputs.company.value,\n        startDate: formState.inputs.startDate.value,\n        endDate: formState.inputs.endDate.value,\n      }),\n      { \n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + auth.token\n     }\n    );\n    history.push('/');\n  } catch (err) {}\n};\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={experienceSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"company\"\n          element=\"input\"\n          label=\"Company\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"startDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"Start Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"endDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"End Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n        {/* <Button type=\"submit\" disabled={!formState.isValid}> */}\n        <Button type=\"submit\" >\n          ADD experience\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewExperience;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport ProfilePage from './profile/pages/ProfilePage';\nimport UpdateHeader from './profile/header/pages/UpdateHeader';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport NewHeader from './profile/header/pages/NewHeader';\nimport NewExperience from './profile/experience/pages/NewExperience';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/profile\" exact>\n          <ProfilePage />\n        </Route>\n        {/* HEADERS */}\n        <Route path=\"/header/new\" exact>\n          <NewHeader />\n        </Route>\n        <Route path=\"/header/:headerId\">\n          <UpdateHeader />\n        </Route>\n        EXPERIENCES\n        <Route path=\"/experiences/new\" exact>\n          <NewExperience />\n        </Route>\n        <Route path=\"/experience/:experienceId\">\n          <updateExperience />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/page\" exact>\n          <ProfilePage />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}