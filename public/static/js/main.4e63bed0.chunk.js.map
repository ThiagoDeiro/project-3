{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","search/components/SearchBox.js","user/pages/Users.js","shared/components/UIElements/CardMockedin.js","shared/context/auth-context.js","shared/components/UIElements/Background.js","profile/header/components/HeaderItem.js","profile/header/components/HeaderList.js","profile/header/pages/HeaderPage.js","profile/experiences/components/ExperienceItem.js","profile/experiences/components/ExperienceList.js","profile/experiences/pages/ExperiencePage.js","profile/education/components/EducationItem.js","profile/education/components/EducationList.js","profile/education/pages/EducationPage.js","profile/others/components/OtherItem.js","profile/others/components/OtherList.js","profile/others/pages/OtherPage.js","profile/pages/ProfilePage.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/FormElements/ImageUpload.js","profile/header/pages/NewHeader.js","profile/header/pages/UpdateHeader.js","profile/experiences/pages/NewExperience.js","profile/experiences/pages/UpdateExperience.js","profile/education/pages/NewEducation.js","profile/education/pages/UpdateEducation.js","profile/others/pages/NewOther.js","profile/others/pages/UpdateOther.js","profile/image/FileUpload.js","profile/image/FileDescriptionEdit.js","profile/image/NewFileUpload.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","name","UsersList","items","length","map","user","isAdmin","key","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","async","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","SearchBox","searchInput","setSearchInput","filterUsers","aria-label","placeholder","onChange","e","target","value","Users","loadedUsers","setLoadedUsers","filteredUsers","setFilteredUsers","users","fetchUsers","searchField","filterResult","toLowerCase","includes","CardMockedin","AuthContext","createContext","isLoggedIn","userId","token","login","logout","Background","params","particles","number","density","enable","value_area","React","Component","HeaderItem","auth","useContext","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","headerId","Authorization","onDelete","creatorId","title","jobTitle","location","about","HeaderList","_id","adminComments","isOk","creator","onDeleteHeader","HeaderPage","loadedHeader","setLoadedHeader","useParams","fetchHeader","deletedHeaderId","prevHeader","ExperienceItem","experienceId","experience","company","format","startDate","endDate","description","ExperienceList","onDeleteExperience","ExperiencePage","loadedExperience","setLoadedExperience","experiences","fetchExperience","deletedExperienceId","prevExperiences","EducationItem","educationId","education","school","degree","EducationList","onDeleteEducation","EducationPage","loadedEducation","setLoadedEducation","fetchEducation","deletedEducationId","prevEducation","OtherItem","otherId","other","OtherList","onDeleteOther","OtherPage","loadedOther","setLoadedOther","others","fetchOther","deletedOtherId","prevOthers","ProfilePage","validate","validators","isValid","validator","trim","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","touchHandler","element","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","Auth","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","JSON","stringify","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","NewHeader","address","setAddress","lat","lng","setCoordinates","history","useHistory","formData","FormData","append","onSelect","geocodeByAddress","results","getLatLng","latLng","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","backgroundColor","active","UpdateHeader","NewExperience","UpdateExperience","NewEducation","UpdateEducation","NewOther","UpdateOther","FileUpload","documents","deleteDocument","axios","delete","then","setState","get","res","data","Col","xs","CardHeader","CardBody","CardText","this","document_id","fileLink","class","bind","Row","role","aria-pressed","FileDescriptionEdit","put","match","catch","alert","NewFileUpload","handleSelectedFile","selectedFile","handleUpload","post","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","setIsAdmin","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","console","log","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.4e63bed0.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nimport { AuthContext } from '../../shared/context/auth-context';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const login = useCallback((uid, token, isAdmin, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    setIsAdmin(isAdmin);\n    \n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        isAdmin: isAdmin,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.isAdmin, new Date(storedData.expiration));\n      console.log('line 54 auth-hook is admin', storedData.isAdmin)\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, isAdmin };\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/profile`}>\n          <div className=\"user-item__image\">\n            <Avatar image={props.image} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              The Dev\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map(user => ( !user.isAdmin &&\n        <UserItem\n          key={user.id}\n          id={user.id}\n          // image={user.image}\n          name={user.name}\n          // placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, useEffect } from 'react';\n\nimport '../../places/pages/PlaceForm.css';\n\n\nconst SearchBox = (props) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n  props.filterUsers(searchInput)}, [searchInput]\n  )\n\n  let onChangeHandler = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  return (\n    <div >\n      <input\n        aria-label=\"Search\"\n        className=\"place-form center\"\n        type='search'\n        placeholder='search users'\n        onChange={onChangeHandler}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport SearchBox from '../../search/components/SearchBox';\n\nconst Users = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedUsers, setLoadedUsers] = useState();\n  const [filteredUsers, setFilteredUsers] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          '/api/users'\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  let filterUsers = (searchField) => {\n    if (loadedUsers) {\n      let filterResult = loadedUsers.filter(user => {\n        return user.name.toLowerCase().includes(searchField.toLowerCase());\n        }\n      )\n    setFilteredUsers(filterResult)\n    }\n    else {\n      return [{name: 'no one'}]\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <SearchBox filterUsers={filterUsers}/>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && filteredUsers && <UsersList items={filteredUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n","import React from 'react'\nimport  './CardMockedin.scss'\nconst CardMockedin = (props) =>{\n    return(\n        <div className={`cardMocke ${props.className}`} style={props.style}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default CardMockedin;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  isAdmin: false,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react'\nimport Particles from 'react-particles-js';\nexport default class Background extends React.Component{\n    render(){\n        return (\n            <Particles \n              params={{\n            \t\tparticles: {\n                  number:{\n                    value:20,\n                    density:{\n                      enable: true,\n                      value_area: 50\n                    }\n                  }\n                  \n            \t\t}\n            \t}}\n              style={{\n                width: '100%',\n                height:'100%',\n                // position: 'fixed',\n              }}\n            >\n            </Particles>\n        );\n    };\n}","import React, { useState, useContext } from 'react';\n\nimport CardMockedin from '../../../shared/components/UIElements/CardMockedin'\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport '../../../places/components/PlaceItem.css';\nimport '../../../places/components/PlaceItemMockedin.scss';\nimport '../../../places/components/About.scss'\nimport { FaPencilAlt } from 'react-icons/fa';\nimport Background from '../../../shared/components/UIElements/Background'\nimport { Link } from 'react-router-dom';\nconst HeaderItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  let headerId = props.id;\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/header/${headerId}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    <Modal\n      show={showConfirmModal}\n      onCancel={cancelDeleteHandler}\n      header=\"Are you sure?\"\n      footerClass=\"place-item__modal-actions\"\n      footer={\n        <React.Fragment>\n          <Button inverse onClick={cancelDeleteHandler}>\n            CANCEL\n          </Button>\n          <Button danger onClick={confirmDeleteHandler}>\n            DELETE\n          </Button>\n        </React.Fragment>\n      }\n    >\n      <p>\n        Do you want to proceed and delete this header? Please note that it\n        can't be undone thereafter.\n      </p>\n    </Modal>\n      <div>\n        <div className='card-background'>\n              <Background/>\n        </div>\n          <div className='icon-edit'>\n              <div className='icon-test'>\n              {auth.userId === props.creatorId && (\n                <Link to={`/header/${props.id}`}><FaPencilAlt/></Link>\n              )}\n               </div>\n          </div>\n          <div className='card-content-container'>\n            {isLoading && <LoadingSpinner asOverlay />}\n            {props.image && \n            <div className=\"card-avatar\">\n            <img src={`/${props.image}`} className=\"avatar\" alt={props.title}/>\n            </div>\n          }\n          <div className='card-content__subcontainer'>\n            <div className='card-headline'>\n              <p className='card-user__name'>Name:{props.name}</p>\n              <p>Job Title: {props.jobTitle}</p>\n              <p className='card-user__sub'>Location: {props.location}</p>\n              <p className='card-user__sub'></p>\n              {/* <p className='headline__location'>About</p> */}\n            {/* <div className=\"place-item__actions\"> */}\n            {/* <div className='card-action'>\n              {auth.userId === props.creatorId && (\n                <Button to={`/header/${props.id}`}>EDIT</Button>\n              )}\n\n              {auth.userId === props.creatorId && (\n                <Button className='button-header' danger onClick={showDeleteWarningHandler}>\n                  DELETE\n                </Button>\n              )}\n              </div> */}\n             </div>\n          </div>     \n          </div>\n          <>\n        <div>\n          <div className='about-title'>\n            <h4 className='about-title__box'>About</h4> \n            <span className='about-icon'>\n            {auth.userId === props.creatorId && (\n                <Link to={`/header/${props.id}`}><FaPencilAlt/></Link>\n              )}\n            </span>\n          </div>\n            <div className='about-text__box'>\n                <div className='about-text__content'>\n                    <p className='about-text__content-element'>{props.about}</p>\n                </div>\n            </div>\n            </div>\n            </>\n        </div> \n\n    </React.Fragment>\n\n  );\n};\n\nexport default HeaderItem;\n","import React from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\nimport CardMockedin from '../../../shared/components/UIElements/CardMockedin'\nimport HeaderItem from './HeaderItem';\n\nconst HeaderList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No header found. Maybe create one?</h2>\n          <Button to=\"/header/new\">Share Header</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <CardMockedin className=\"cardMocke\">\n      {props.items.map(header => (\n        <HeaderItem\n          key={header._id}\n          id={header._id}\n          name={header.name}\n          image={header.image}\n          jobTitle={header.jobTitle}\n          location={header.location}\n          about={header.about}\n          adminComments={header.adminComments}\n          isOk={header.isOk}\n          creatorId={header.creator}\n          onDelete={props.onDeleteHeader}\n        />\n      ))}\n    </CardMockedin>\n  );\n};\n\nexport default HeaderList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport HeaderList from '../components/HeaderList';\n\nconst HeaderPage = () => {\n    const [loadedHeader, setLoadedHeader] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchHeader = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/header/user/${userId}`\n            );\n            setLoadedHeader(responseData.header);\n          } catch (err) {}\n        };\n        fetchHeader();\n      }, [sendRequest, userId]);\n    \n      const headerDeletedHandler = deletedHeaderId => {\n        setLoadedHeader(prevHeader =>\n          prevHeader.filter(header => header.id !== deletedHeaderId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedHeader && (\n            <HeaderList items={loadedHeader} onDeleteHeader={headerDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default HeaderPage;\n","import React, { useState, useContext } from 'react';\nimport Moment from 'react-moment';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\n// import '../../../places/components/PlaceItem.css';\nimport '../../../places/components/Experience.scss'\nimport { FaRegBuilding, FaPlus,FaPencilAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst ExperienceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const experienceId = props.id;\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/experiences/${experienceId}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete();\n    } catch (err) {}\n  };\n\n  // let endDate = Moment(`${props.endDate}`).format(\"MMMM D, YYYY\");\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        experience=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this experience? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <div className='card-items'>\n          <div className='card-items__icon-experience'>\n          <FaRegBuilding className='icont-element' />\n        </div> \n        <div className=\"sub__card\">\n        <div className=\"job-description\">\n          <span className='edit-job' >\n            <p className='card-items__job-title'>{props.title}</p>\n              {auth.userId === props.creatorId && (\n                <Link to={`/experience/${props.id}`}> \n                  <FaPencilAlt className='edit-job-icon'/>\n                </Link>\n            )}\n          </span>\n          {isLoading && <LoadingSpinner asOverlay />}\n            <div className=\"place-item__info\">\n            <p className='card-items__title'>{props.company}</p>\n            <p className='card-items__date '>Start Date: &nbsp;\t\n          <Moment format=\"MMMM YYYY\">\n              {props.startDate}\n          </Moment> |\n            End Date: &nbsp;\t\n          <Moment format=\"MMMM YYYY\">\n            {props.endDate}\n          </Moment>\n            </p>\n            <div className='card-items-description'>\n            <p className='card-items-description'>{props.description}</p>\n            </div>\n          </div>\n        <div className=\"place-item__actions\">\n            {auth.userId === props.creatorId && (\n          <Button to={`/experience/${props.id}`}>EDIT</Button>\n          )}\n\n          {auth.userId === props.creatorId && (\n        <Button danger onClick={showDeleteWarningHandler}>\n          DELETE\n          </Button>\n        )}\n          </div>\n         </div>\n        </div>\n      </div>\n    </React.Fragment>\n\n  );\n};\n\nexport default ExperienceItem;\n","import React, {useContext} from 'react';\nimport CardMockedin from '../../../shared/components/UIElements/CardMockedin'\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\nimport ExperienceItem from './ExperienceItem';\nimport '../../../places/components/Experience.scss'\nimport { FaRegBuilding, FaPlus,FaPencilAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../shared/context/auth-context';\n\nconst ExperienceList = props => {\n  const auth = useContext(AuthContext);\n\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No experience found. Maybe create one?</h2>\n          <Button to=\"/experiences/new\">Share Experience</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <CardMockedin  className=\"cardMocke\">\n     <div className='card-title__experience'>\n      <div className='card-title__experience__position'>\n        <h4 >Experience</h4>\n      </div>\n      {auth.userId === props.userId && ( <Link to=\"/experiences/new\"><FaPlus className='plus-icon-size'/> </Link> )}      \n       </div>\n      {props.items.map(experience => (\n        <ExperienceItem\n          key={experience._id}\n          id={experience._id}\n          title={experience.title}\n          company={experience.company}\n          startDate={experience.startDate}\n          endDate={experience.endDate}\n          adminComments={experience.adminComments}\n          description={experience.description}\n          isOk={experience.isOk}\n          creatorId={experience.creator}\n          onDelete={props.onDeleteExperience}\n        />\n      ))}\n   </CardMockedin>\n  );\n};\n\nexport default ExperienceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport ExperienceList from '../components/ExperienceList';\n\nconst ExperiencePage = (props) => {\n    const [loadedExperience, setLoadedExperience] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchExperience = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/experiences/user/${userId}`\n            );\n            setLoadedExperience(responseData.experience.experiences);\n          } catch (err) {}\n        };\n        fetchExperience();\n      }, [sendRequest, userId]);\n    \n      const experienceDeletedHandler = deletedExperienceId => {\n        setLoadedExperience(prevExperiences =>\n          prevExperiences.filter(experience => experience.id !== deletedExperienceId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedExperience && (\n            <ExperienceList userId={userId} items={loadedExperience} onDeleteExperience={experienceDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default ExperiencePage;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { FaRegBuilding, FaPencilAlt,FaUniversity} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport '../../../places/components/PlaceItem.css';\n\nconst EducationItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  let educationId = props.id;\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/education/${educationId}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        education=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this education? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <div className='card-items'>\n        <div className='card-items__icon-experience'>\n          <FaUniversity className='icont-element' />\n        </div> \n        <div className=\"sub__card\">\n        <div className=\"job-description\">\n          <span className='edit-job' >\n          {/* {isLoading && <LoadingSpinner asOverlay />}\n          {props.image && \n          <div className=\"place-item__image\">\n            <img src={`/${props.image}`} alt={props.title}/>\n          </div>} */}\n              <p className='card-items__job-title'>School: {props.school}</p>\n              {auth.userId === props.creatorId && (\n              <Link to={`/education/${props.id}`}><FaPencilAlt/></Link>\n            )}\n          </span>\n          <div className=\"place-item__info\">\n                <p className='card-items__title'>Degree: {props.degree}</p>\n                <p className='card-items__date '>{props.startDate} - {props.endDate}</p>\n                <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            {auth.userId === props.creatorId && (\n              <Button to={`/education/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n\n  );\n};\n\nexport default EducationItem;\n","import React, {useContext} from 'react';\n\nimport CardMockedin from '../../../shared/components/UIElements/CardMockedin'\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\nimport { FaRegBuilding, FaPlus,FaPencilAlt } from 'react-icons/fa';\nimport EducationItem from './EducationItem';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../shared/context/auth-context';\n\n\n\nconst EducationList = props => {\n  const auth = useContext(AuthContext);\n\n  if (props.items.education.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No education found. Maybe create one?</h2>\n          <Button to=\"/education/new\">Share Education</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <React.Fragment>\n       <CardMockedin  className=\"cardMocke\">\n     <div className='card-title__experience'>\n        <div className='card-title__experience__position'>\n          <h4 >Education</h4>\n        </div> \n        {auth.userId === props.userId && ( <Link to=\"/education/new\"><FaPlus className='plus-icon-size'/> </Link> )}      \n       </div>\n        {props.items.education.map(education => (\n          <EducationItem\n            key={education._id}\n            id={education._id}\n            school={education.school}\n            degree={education.degree}\n            startDate={education.startDate}\n            endDate={education.endDate}\n            description={education.description}\n            adminComments={education.adminComments}\n            isOk={education.isOk}\n            creatorId={education.creator}\n            onDelete={props.onDeleteEducation}\n          />\n        ))}\n      </CardMockedin>\n      </React.Fragment>\n  );\n};\n\nexport default EducationList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport EducationList from '../components/EducationList';\n\nconst EducationPage = (props) => {\n    const [loadedEducation, setLoadedEducation] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchEducation = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/education/user/${userId}`\n            );\n            setLoadedEducation(responseData.education);\n          } catch (err) {}\n        };\n        fetchEducation();\n      }, [sendRequest, userId]);\n    \n      const educationDeletedHandler = deletedEducationId => {\n        setLoadedEducation(prevEducation =>\n          prevEducation.filter(education => education.id !== deletedEducationId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedEducation && (\n            <EducationList userId={userId} items={loadedEducation} onDeleteEducation={educationDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default EducationPage;\n","import React, { useState, useContext } from 'react';\nimport Moment from 'react-moment';\n\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Modal from '../../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport '../../../places/components/PlaceItem.css';\nimport { FaRegBuilding, FaPlus,FaPencilAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport '../../../places/components/Experience.scss'\n\nconst OtherItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const otherId = props.id;\n\n  const confirmDeleteHandler = async (props) => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `/api/others/${otherId}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete();\n    } catch (err) {}\n  };\n\n  // let endDate = Moment(`${props.endDate}`).format(\"MMMM D, YYYY\");\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        other=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this other? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <div className='card-items'>\n          <div className='card-items__icon-experience'>\n          <FaRegBuilding className='icont-element' />\n        </div> \n        <div className=\"sub__card\">\n        <div className=\"job-description\">\n        <span className='edit-job' >\n        <p className='card-items__job-title'>{props.title}</p>\n        {auth.userId === props.creatorId && (\n              <Link to={`/other/${props.id}`}>\n                <FaPencilAlt className='edit-job-icon'/>\n              </Link>\n            )}\n        </span>\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__info\">\n            <p className='card-items__title'>Title: {props.title}</p>\n            <p className='card-items__title'>Company: {props.company}</p>\n            {/* <p className='card-items__date '>Start Date: &nbsp;\t\n              <Moment format=\"MMMM YYYY\">\n                  {props.startDate}\n              </Moment> |\n            End Date: &nbsp;\t\n              <Moment format=\"MMMM YYYY\">\n                  {props.endDate}\n              </Moment>\n            </p> */}\n            <div className='card-items-description'>\n              <p className='card-items-description'>{props.description}</p>\n            </div>\n          </div>\n          <div className=\"place-item__actions\">\n            {auth.userId === props.creatorId && (\n              <Button to={`/others/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n            </div>\n            </div>\n        </div>\n      </div>\n    </React.Fragment>\n\n  );\n};\n\nexport default OtherItem;\n","import React, {useContext} from 'react';\n\n\nimport CardMockedin from '../../../shared/components/UIElements/CardMockedin'\nimport Card from '../../../shared/components/UIElements/Card';\nimport Button from '../../../shared/components/FormElements/Button';\nimport '../../../places/components/PlaceList.css';\nimport OtherItem from './OtherItem';\nimport { FaRegBuilding, FaPlus,FaPencilAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../../../shared/context/auth-context';\n\nconst OtherList = props => {\n  const auth = useContext(AuthContext);\n\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No other found. Maybe create one?</h2>\n          <Button to=\"/others/new\">Share Other</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <CardMockedin className=\"cardMocke\">\n    <div className='card-title__experience'>\n      <div className='card-title__experience__position'>\n        <h4 >Accomplishments</h4>\n      </div> \n      {auth.userId === props.userId && ( <Link to=\"/others/new\"><FaPlus className='plus-icon-size'/> </Link> )}      \n       </div>\n      {props.items.map(other => (\n        <OtherItem\n          key={other._id}\n          id={other._id}\n          title={other.title}\n          company={other.company}\n          startDate={other.startDate}\n          endDate={other.endDate}\n          adminComments={other.adminComments}\n          isOk={other.isOk}\n          creatorId={other.creator}\n          onDelete={props.onDeleteOther}\n        />\n      ))}\n    </CardMockedin>\n  );\n};\n\nexport default OtherList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport OtherList from '../components/OtherList';\n\nconst OtherPage = (props) => {\n    const [loadedOther, setLoadedOther] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  \n    const userId = useParams().userId;\n  \n    useEffect(() => {\n        const fetchOther = async () => {\n          try {\n            const responseData = await sendRequest(\n              `/api/others/user/${userId}`\n            );\n            setLoadedOther(responseData.other.others);\n          } catch (err) {}\n        };\n        fetchOther();\n      }, [sendRequest, userId]);\n    \n      const otherDeletedHandler = deletedOtherId => {\n        setLoadedOther(prevOthers =>\n          prevOthers.filter(other => other.id !== deletedOtherId)\n        );\n      };\n      return (\n        <React.Fragment>\n          <ErrorModal error={error} onClear={clearError} />\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n          {!isLoading && loadedOther && (\n            <OtherList userId={userId} items={loadedOther} onDeleteOther={otherDeletedHandler} />\n          )}\n        </React.Fragment>\n      );\n    };\n    \n\nexport default OtherPage;\n","import React from 'react';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport HeaderPage from '../header/pages/HeaderPage';\nimport ExperiencePage from '../experiences/pages/ExperiencePage';\nimport EducationPage from '../education/pages/EducationPage';\nimport OtherPage from '../others/pages/OtherPage';\n\nconst ProfilePage = (props) => {\n\n  const { isLoading, error, clearError } = useHttpClient();\n\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n\n      {!isLoading && (\n        <HeaderPage />\n      )}\n      {!isLoading && (\n        <ExperiencePage userId={props.userId}/>\n      )}\n      {!isLoading && (\n        <EducationPage userId={props.userId}/>\n      )}\n      {!isLoading && (\n        <OtherPage userId={props.userId}/>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProfilePage;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          '/api/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token, responseData.isAdmin);\n      } catch (err) {}\n    } else {\n      try {\n        const responseData = await sendRequest(\n          '/api/users/signup',\n          'POST',\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n\n        auth.login(responseData.userId, responseData.token, responseData.isAdmin);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      {auth.isAdmin && (\n        <li>\n          <NavLink to=\"/\" exact>\n                SEARCH USERS\n          </NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && !auth.isAdmin  && (\n        <li>\n          <NavLink to={`/${auth.userId}/profile`}>MY PROFILE</NavLink>\n        </li>\n      )}\n      {/* {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/header/new\">+ HEADER</NavLink>\n        </li>\n      )} */}\n      {/* {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/experiences/new\">+ EXPERIENCE</NavLink>\n        </li>\n      )} */}\n      {/* {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/education/new\">+ EDUCATION </NavLink>\n        </li>\n      )} */}\n      {/* {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/others/new\">+ OTHER </NavLink>\n        </li>\n      )} */}\n      {/* {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )} */}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n        <li>\n          <NavLink to=\"/image\">IMAGE UPLOAD (PROVISORY)</NavLink>\n        </li>\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">MockedIn</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewHeader = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [address, setAddress] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  \n  const [formState, inputHandler] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      jobTitle: {\n        value: '',\n        isValid: false\n      },\n      location: {\n        value: address,\n        isValid: false\n      },\n      about: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n  };\n\n  const history = useHistory();\n\n  const headerSubmitHandler = async (event, value) => {\n    try {\n      const formData = new FormData();\n      formData.append('name', formState.inputs.name.value);\n      formData.append('image', formState.inputs.image.value);\n      formData.append('jobTitle', formState.inputs.jobTitle.value);\n      formData.append('location', address);\n      formData.append('about', formState.inputs.about.value);\n      await sendRequest('/api/header', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={headerSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"name\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Name\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide a photo.\"\n        />\n        <Input\n          id=\"jobTitle\"\n          element=\"textarea\"\n          label=\"Job Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <div>\n        <PlacesAutocomplete\n          value={address}\n          onChange={setAddress}\n          onSelect={handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n              <h2>Location</h2>\n              <input {...getInputProps({ placeholder: \"Type address\" }) } />\n              \n              <div>\n                {loading ? <div>...loading</div> : null}\n\n                {suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                  };\n\n                  return (\n                    <div {...getSuggestionItemProps(suggestion, { style })}>\n                      {suggestion.description}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n        </div>\n        <Input\n          id=\"about\"\n          element=\"textarea\"\n          label=\"About\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n\n        {/* <Input\n          id=\"adminComments\"\n          element=\"input\"\n          label=\"Comment\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        /> */}\n        {/* <Button type=\"submit\" disabled={!formState.isValid}> */}\n        <Button type=\"submit\" >\n          ADD HEADER\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewHeader;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../../shared/components/FormElements/ImageUpload';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst UpdateHeader = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedHeader, setLoadedHeader] = useState();\n  const [address, setAddress] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n  const headerId = useParams().headerId;\n  const history = useHistory();\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n  };\n\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      name: {\n        value: '',\n        isValid: false\n      },\n      jobTitle: {\n        value: '',\n        isValid: false\n      },\n      location: {\n        value: '',\n        isValid: false\n      },\n      about: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchHeader = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/header/${headerId}`\n        );\n        setLoadedHeader(responseData.header);\n        setFormData(\n          {\n            name: {\n              value: responseData.header.name,\n              isValid: true\n            },\n            jobTitle: {\n              value: responseData.header.jobTitle,\n              isValid: true\n            },\n            location: {\n              value: responseData.header.location,\n              isValid: true\n            },\n            about: {\n              value: responseData.header.about,\n              isValid: true\n            },\n            image: {\n              value: responseData.header.image,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchHeader();\n  }, [sendRequest, headerId, setFormData]);\n\n  const headerUpdateSubmitHandler = async event => {\n    event.preventDefault();\n  //   try {\n  //     await sendRequest(\n  //       `/api/header/${headerId}`,\n  //       'PATCH',\n  //       JSON.stringify({\n  //         name: formState.inputs.name.value,\n  //         jobTitle: formState.inputs.jobTitle.value,\n  //         about: formState.inputs.about.value\n  //       }),\n  //       {\n  //         'Content-Type': 'application/json',\n  //         Authorization: 'Bearer ' + auth.token\n  //       }\n  //     );\n  //     history.push('/' + auth.userId + '/header');\n  //   } catch (err) {}\n  // };\n\n  try {\n    const formData = new FormData();\n    formData.append('name', formState.inputs.name.value);\n    formData.append('image', formState.inputs.image.value);\n    formData.append('jobTitle', formState.inputs.jobTitle.value);\n    formData.append('location', address);\n    formData.append('about', formState.inputs.about.value);\n    await sendRequest(\n      `/api/header/${headerId}`,\n      'PATCH', \n      formData, {\n      Authorization: 'Bearer ' + auth.token\n    });\n    history.push('/' + auth.userId + '/header');\n  } catch (err) {}\n};\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedHeader && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find header!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedHeader && (\n        <form className=\"place-form\" onSubmit={headerUpdateSubmitHandler}>\n          <Input\n            id=\"name\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your name.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.name}\n            initialValid={true}\n          />\n          <ImageUpload\n            id=\"image\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.image}\n            errorText=\"Please provide a photo.\"\n          />\n          <Input\n            id=\"jobTitle\"\n            element=\"textarea\"\n            label=\"Job Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your job title.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.jobTitle}\n            initialValid={true}\n          />\n          {/* <Input\n            id=\"location\"\n            element=\"textarea\"\n            label=\"Location\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your location.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.location}\n            initialValid={true}\n          /> */}\n          <div>\n          <PlacesAutocomplete\n            value={address}\n            onChange={setAddress}\n            onSelect={handleSelect}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <h2>Location</h2>\n                <input {...getInputProps({ placeholder: \"Type address\" } ) } />\n                \n                <div>\n                  {loading ? <div>...loading</div> : null}\n\n                  {suggestions.map(suggestion => {\n                    const style = {\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                    };\n\n                    return (\n                      <div {...getSuggestionItemProps(suggestion, { style })}>\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n          </div>\n          <Input\n            id=\"about\"\n            element=\"textarea\"\n            label=\"About\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedHeader.about}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE HEADER\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateHeader;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewExperience = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      company: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      },\n      description: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const experienceSubmitHandler = async event => {\n    event.preventDefault();\n  try {\n    await sendRequest(\n      '/api/experiences',\n      'POST',\n      JSON.stringify({\n        title: formState.inputs.title.value,\n        company: formState.inputs.company.value,\n        startDate: formState.inputs.startDate.value,\n        endDate: formState.inputs.endDate.value,\n        description: formState.inputs.description.value,\n      }),\n      { \n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + auth.token\n     }\n    );\n    history.push('/');\n  } catch (err) {}\n};\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={experienceSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"company\"\n          element=\"input\"\n          label=\"Company\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"startDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"Start Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"endDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"End Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n         <Input\n          id=\"description\"\n          element=\"textarea\"\n          type=\"text\"\n          label=\"description\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n        {/* <Button type=\"submit\" disabled={!formState.isValid}> */}\n        <Button type=\"submit\" >\n          ADD experience\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewExperience;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\n\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst UpdateExperience = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedExperience, setLoadedExperience] = useState();\n  const experienceId = useParams().experienceId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      company: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      },\n      description:{\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchExperience = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/experiences/${experienceId}`\n        );\n        setLoadedExperience(responseData.experience);\n        setFormData(\n          {\n            title: {\n              value: responseData.experiences.name,\n              isValid: true\n            },\n            company: {\n              value: responseData.experiences.jobTitle,\n              isValid: true\n            },\n            startDate: {\n              value: responseData.experiences.about,\n              isValid: true\n            },\n            endDate: {\n              value: responseData.experiences.image,\n              isValid: true\n            },\n            description: {\n              value: responseData.experiences.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchExperience();\n  }, [sendRequest, experienceId, setFormData]);\n\n  const experienceUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `/api/experiences/${experienceId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          company: formState.inputs.company.value,\n          startDate: formState.inputs.startDate.value,\n          endDate: formState.inputs.endDate.value,\n          description:formState.inputs.description.value,\n        }),\n        \n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/experiences');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedExperience && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find experience!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedExperience && (\n        <form className=\"place-form\" onSubmit={experienceUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your title.\"\n            onInput={inputHandler}\n            initialValue={loadedExperience.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"company\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Company\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter the name of the company.\"\n            onInput={inputHandler}\n            initialValue={loadedExperience.company}\n            initialValid={true}\n          />\n          <Input\n            id=\"startDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"Start Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedExperience.startDate}\n            initialValid={true}\n          />\n          <Input\n            id=\"endDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"End Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedExperience.endDate}\n            initialValid={true}\n          />\n           <Input\n            id=\"description\"\n            element=\"textarea\"\n            type=\"text\"\n            label=\"description\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your title.\"\n            onInput={inputHandler}\n            initialValue={loadedExperience.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE Experience\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateExperience;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewEducation = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      school: {\n        value: '',\n        isValid: false\n      },\n      degree: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      },\n      description: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const educationSubmitHandler = async event => {\n    event.preventDefault();\n  try {\n    await sendRequest(\n      '/api/education',\n      'POST',\n      JSON.stringify({\n        school: formState.inputs.school.value,\n        degree: formState.inputs.degree.value,\n        startDate: formState.inputs.startDate.value,\n        endDate: formState.inputs.endDate.value,\n        description: formState.inputs.description.value,\n      }),\n      { \n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + auth.token\n     }\n    );\n    history.push('/');\n  } catch (err) {}\n};\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={educationSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"school\"\n          element=\"input\"\n          type=\"text\"\n          label=\"School\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"degree\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Degree\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"startDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"Start Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"endDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"End Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n           <Input\n          id=\"description\"\n          element=\"textarea\"\n          type=\"text\"\n          label=\"Description\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n      \n        <Button type=\"submit\" >\n          ADD Education\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewEducation;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\n\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst UpdateEducation = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedEducation, setLoadedEducation] = useState();\n  const educationId = useParams().educationId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      school: {\n        value: '',\n        isValid: false\n      },\n      degree: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      },\n      description: {\n        value: null,\n        isValid: false\n      }\n  \n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchEducation = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/education/${educationId}`\n        );\n        setLoadedEducation(responseData.education);\n        setFormData(\n          {\n            school: {\n              value: responseData.education.name,\n              isValid: true\n            },\n            degree: {\n              value: responseData.education.jobTitle,\n              isValid: true\n            },\n            startDate: {\n              value: responseData.education.about,\n              isValid: true\n            },\n            endDate: {\n              value: responseData.education.image,\n              isValid: true\n            },\n            description: {\n              value: responseData.education.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchEducation();\n  }, [sendRequest, educationId, setFormData]);\n\n  const educationUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `/api/education/${educationId}`,\n        'PATCH',\n        JSON.stringify({\n          school: formState.inputs.school.value,\n          degree: formState.inputs.degree.value,\n          startDate: formState.inputs.startDate.value,\n          endDate: formState.inputs.endDate.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/education');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedEducation && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find education!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedEducation && (\n        <form className=\"place-form\" onSubmit={educationUpdateSubmitHandler}>\n          <Input\n            id=\"school\"\n            element=\"input\"\n            type=\"text\"\n            label=\"School\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your school name.\"\n            onInput={inputHandler}\n            initialValue={loadedEducation.school}\n            initialValid={true}\n          />\n          <Input\n            id=\"Degree\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Degree\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your degree.\"\n            onInput={inputHandler}\n            initialValue={loadedEducation.degree}\n            initialValid={true}\n          />\n            <Input\n            id=\"startDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"Start Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedEducation.startDate}\n            initialValid={true}\n          />\n            <Input\n            id=\"endDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"End Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedEducation.endDate}\n            initialValid={true}\n          />\n           <Input\n            id=\"description\"\n            element=\"textarea\"\n            type=\"text\"\n            label=\"Description\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedEducation.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE Education\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateEducation;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst NewOther = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      company: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const otherSubmitHandler = async event => {\n    event.preventDefault();\n  try {\n    await sendRequest(\n      '/api/others',\n      'POST',\n      JSON.stringify({\n        title: formState.inputs.title.value,\n        company: formState.inputs.company.value,\n        startDate: formState.inputs.startDate.value,\n        endDate: formState.inputs.endDate.value,\n      }),\n      { \n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + auth.token\n     }\n    );\n    history.push('/');\n  } catch (err) {}\n};\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={otherSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter your name to be displayed.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"company\"\n          element=\"input\"\n          label=\"Company\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid Job Title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"startDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"Start Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter something about yourself.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"endDate\"\n          element=\"input\"\n          type=\"date\"\n          label=\"End Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Comment by the recruiter.\"\n          onInput={inputHandler}\n        />\n        {/* <Button type=\"submit\" disabled={!formState.isValid}> */}\n        <Button type=\"submit\" >\n          ADD Other\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewOther;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../../shared/components/FormElements/Input';\nimport Button from '../../../shared/components/FormElements/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\n\nimport { VALIDATOR_REQUIRE } from '../../../shared/util/validators';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\nimport { AuthContext } from '../../../shared/context/auth-context';\nimport '../../../places/pages/PlaceForm.css';\n\nconst UpdateOther = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedOther, setLoadedOther] = useState();\n  const otherId = useParams().otherId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      company: {\n        value: '',\n        isValid: false\n      },\n      startDate: {\n        value: '',\n        isValid: false\n      },\n      endDate: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchOther = async () => {\n      try {\n        const responseData = await sendRequest(\n          `/api/others/${otherId}`\n        );\n        setLoadedOther(responseData.other);\n        setFormData(\n          {\n            title: {\n              value: responseData.others.name,\n              isValid: true\n            },\n            company: {\n              value: responseData.others.jobTitle,\n              isValid: true\n            },\n            startDate: {\n              value: responseData.others.about,\n              isValid: true\n            },\n            endDate: {\n              value: responseData.others.image,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchOther();\n  }, [sendRequest, otherId, setFormData]);\n\n  const otherUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `/api/others/${otherId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          company: formState.inputs.company.value,\n          startDate: formState.inputs.startDate.value,\n          endDate: formState.inputs.endDate.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/others');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedOther && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find Other!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedOther && (\n        <form className=\"place-form\" onSubmit={otherUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your title.\"\n            onInput={inputHandler}\n            initialValue={loadedOther.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"company\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Company\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter the name of the company.\"\n            onInput={inputHandler}\n            initialValue={loadedOther.company}\n            initialValid={true}\n          />\n          <Input\n            id=\"startDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"Start Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedOther.startDate}\n            initialValid={true}\n          />\n          <Input\n            id=\"endDate\"\n            element=\"input\"\n            type=\"date\"\n            label=\"End Date\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter your about text.\"\n            onInput={inputHandler}\n            initialValue={loadedOther.endDate}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE Other\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdateOther;\n","import React, { Component } from \"react\";\nimport { Row, Col, Card, CardHeader, CardText, CardBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass FileUpload extends Component {\n  state = {\n    documents: []\n  };\n\n  deleteDocument = id => {\n    axios.delete(\"/api/document/\" + id).then(() => {\n      this.setState({\n        documents: this.state.documents.filter(document => document._id !== id)\n      });\n    });\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/document\").then(res => {\n      this.setState({ documents: res.data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"bg-success\">\n        <Col xs=\"8\">\n          <Card>\n            <CardHeader className=\"p-2 mb-2 bg-primary text-white\" />\n            <CardBody>\n              <CardText>\n                <table className=\"table table-stripe\">\n                  <thead>\n                    <tr>\n                      <th>Document Id</th>\n                      <th>Description</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.documents.map(document => (\n                      <tr>\n                        <td>{document.document_id}</td>\n                        <td>{document.description}</td>\n                        <td>\n                          <a href={document.fileLink} target=\"_blank\">\n                            View File\n                          </a>\n                          <img src={document.fileLink} alt=\"Smiley face\" height=\"125\" width=\"125\"></img>\n                        </td>\n                        <td>\n                          <Link\n                            to={`/api/document/edit/${document._id}`}\n                            class=\"btn btn-success\"\n                          >\n                            Edit Description\n                          </Link>\n                        </td>\n                        <td>\n                          <button\n                            onClick={this.deleteDocument.bind(\n                              this,\n                              document._id\n                            )}\n                            className=\"btn btn-danger\"\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Row>\n          <Col>\n            <div class=\"float-sm-right m-b-sm\">\n              <h4>\n                <Link\n                  to={\"/api/document/upload\"}\n                  className=\"btn btn-secondary btn-sm active\"\n                  role=\"button\"\n                  aria-pressed=\"true\"\n                >\n                  Add a New Document\n                </Link>\n              </h4>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Card, CardHeader, CardText, CardBody, Row, Col } from \"reactstrap\";\n\nclass FileDescriptionEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      document: {}\n    };\n  }\n\n  onChange = e => {\n    const state = this.state.document;\n    state[e.target.name] = e.target.value;\n    this.setState({\n      document: state\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const description = this.state.document.description;\n\n    axios\n      .put(\"/api/document/edit/\" + this.props.match.params.id, description)\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        alert(\"Oops some error happened, please try again\");\n      });\n  };\n\n  // When this DocumentEdit component mounts I want the existing 'description' to be fetched.\n  componentDidMount() {\n    axios.get(\"/api/document/\" + this.props.match.params.id).then(res => {\n      this.setState({ document: res.data });\n    });\n  }\n\n  render() {\n    const { description } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <Col xs=\"4\">\n            <Card>\n              <CardHeader className=\"p-2 mb-2 bg-primary text-white\">\n                Edit the description field of this document\n              </CardHeader>\n              <CardBody>\n                <CardText>\n                  <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"description\">Edit Description:</label>\n                      <input\n                        type=\"text\"\n                        value={description}\n                        class=\"form-control\"\n                        name=\"description\"\n                        onChange={this.onChange}\n                        placeholder=\" Enter the new Description\"\n                      />\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">\n                      Submit the updated Description\n                    </button>\n                  </form>\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default FileDescriptionEdit;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Card, CardHeader, CardText, CardBody, Row, Col } from \"reactstrap\";\n\n\nclass NewFileUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      selectedFile: null\n    };\n  }\n\n  handleSelectedFile = e => {\n    e.preventDefault();\n    this.setState({\n      description: e.target.value,\n      selectedFile: e.target.files[0]\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleUpload = event => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    data.append(\"file\", this.state.selectedFile, this.state.description);\n\n    axios\n      .post('upload', data)\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        alert(\"Oops some error happened, please try again\");\n      });\n  };\n\n  render() {\n    const { description, selectedFile } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <Col xs=\"4\">\n            <Card>\n              <CardHeader className=\"p-2 mb-2 bg-primary text-white\">\n                Upload a new Document\n              </CardHeader>\n              <CardBody>\n                <CardText>\n                  <form onSubmit={this.handleUpload}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"description\">Description:</label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        name=\"description\"\n                        onChange={this.onChange}\n                        placeholder=\"Description\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <input\n                        type=\"file\"\n                        name=\"\"\n                        id=\"\"\n                        onChange={this.handleSelectedFile}\n                      />\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">\n                      Upload\n                    </button>\n                  </form>\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default NewFileUpload;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport ProfilePage from './profile/pages/ProfilePage';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport NewHeader from './profile/header/pages/NewHeader';\nimport UpdateHeader from './profile/header/pages/UpdateHeader';\nimport NewExperience from './profile/experiences/pages/NewExperience';\nimport UpdateExperience from './profile/experiences/pages/UpdateExperience';\nimport NewEducation from './profile/education/pages/NewEducation';\nimport UpdateEducation from './profile/education/pages/UpdateEducation';\nimport NewOther from './profile/others/pages/NewOther';\nimport UpdateOther from './profile/others/pages/UpdateOther';\nimport FileUpload from './profile/image/FileUpload';\nimport FileDescriptionEdit from './profile/image/FileDescriptionEdit';\nimport NewFileUpload from './profile/image/NewFileUpload';\n\nconst App = () => {\n  const { token, login, logout, userId, isAdmin } = useAuth();\n\n  let routes;\n  if (token && isAdmin) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/profile\" exact>\n          <ProfilePage userId={userId}/>\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  else if (token && !isAdmin) {\n    routes = (\n      <Switch>\n        <Route path=\"/:userId/profile\" exact>\n          <ProfilePage userId={userId}/>\n        </Route>\n        {/* HEADERS */}\n        <Route path=\"/header/new\" exact>\n          <NewHeader />\n        </Route>\n        <Route path=\"/header/:headerId\">\n          <UpdateHeader />\n        </Route>\n        {/* EXPERIENCES */}\n        <Route path=\"/experiences/new\" exact>\n          <NewExperience />\n        </Route>\n        <Route path=\"/experience/:experienceId\">\n          <UpdateExperience />\n        </Route>\n        {/* EDUCATION */}\n        <Route path=\"/education/new\" exact>\n          <NewEducation />\n        </Route>\n        <Route path=\"/education/:educationId\">\n          <UpdateEducation />\n        </Route>\n        {/* OTHERS */}\n        <Route path=\"/others/new\" exact>\n          <NewOther />\n        </Route>\n        <Route path=\"/others/:otherId\">\n          <UpdateOther />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } \n  \n  else {\n    routes = (\n      <Switch>\n        <Route path=\"/:userId/page\" exact>\n          <ProfilePage />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Route path=\"/image\" exact>\n          <FileUpload/>\n        </Route>\n        <Route path=\"/api/document/upload\" exact>\n          <NewFileUpload />\n        </Route>\n        <Route path=\"/api/document/edit/:id\" exact>\n            <FileDescriptionEdit />\n        </Route>\n\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        isAdmin: isAdmin,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}